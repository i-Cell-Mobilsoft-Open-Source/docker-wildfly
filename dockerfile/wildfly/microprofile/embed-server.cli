#Â Start embedded server
# embed-server --server-config=standalone-full.xml --std-out=echo

embed-server --std-out=echo
 
# Start batching commands
#####EE configs#####
run-batch --file=${TMP_DIR}/embed-server/configure-managed-executor.cli
run-batch --file=${TMP_DIR}/embed-server/configure-undertow.cli

#####Microprofile telemetry#####
# add telemetry with exception handling
try
/extension=org.wildfly.extension.opentelemetry:add
/extension=org.wildfly.extension.microprofile.telemetry:add
/subsystem=opentelemetry:add
/subsystem=microprofile-telemetry:add
catch
echo "Opentelemetry extension already activated."
finally
end-try

run-batch --file=${TMP_DIR}/embed-server/configure-opentelemetry.cli

#####Micrometer#####
# add micrometer with exception handling
try
/extension=org.wildfly.extension.micrometer:add
/subsystem=micrometer:add
catch
echo "Micrometer extension already activated."
finally
end-try

run-batch --file=${TMP_DIR}/embed-server/configure-micrometer.cli

# try remove unsupported metrics
# https://docs.wildfly.org/30/Admin_Guide.html#MicroProfile_Metrics_SmallRye
# https://docs.wildfly.org/30/Admin_Guide.html#micrometer-required-extension-metrics
try
/subsystem=metrics:remove()
/extension=org.wildfly.extension.metrics:remove()
catch
echo "WildFly Metrics extension already removed."
finally
end-try

# add openapi with exception handling
try
/extension=org.wildfly.extension.microprofile.openapi-smallrye:add
/subsystem=microprofile-openapi-smallrye:add
catch
echo "Openapi extension already activated."
finally
end-try

# add health extension with exception handling
try
/extension=org.wildfly.extension.microprofile.health-smallrye:add
/subsystem=microprofile-health-smallrye:add(security-enabled=false, empty-liveness-checks-status="${env.HEALTH_EMPTY_LIVENESS_CHECKS_STATUS:UP}", empty-readiness-checks-status="${env.HEALTH_EMPTY_READINESS_CHECKS_STATUS:UP}", empty-startup-checks-status="${env.HEALTH_EMPTY_STARTUP_CHECKS_STATUS:UP}")
catch
echo "Health extension already activated."
finally
end-try

# add reactive-messaging extension with exception handling
try
run-batch --file=${TMP_DIR}/embed-server/configure-reactive-messaging.cli
catch
echo "Reactive messaging extension already activated."
finally
end-try

# remove jmx subsystem
try
/subsystem=jmx:remove
catch
echo "Could not remove JMX subsystem"
finally
end-try

# Stop embedded server
stop-embedded-server
